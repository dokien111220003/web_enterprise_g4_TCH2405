"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeXworksheet = makeXworksheet;
exports.XheaderFooter = exports.XpageSetup = exports.XpageMargins = exports.XprintOptions = exports.XmergeCell = exports.XmergeCells = exports.Xf = exports.Xc = exports.Xrow = exports.XsheetData = exports.Xcol = exports.Xcols = exports.XsheetFormatPr = exports.Xpane = exports.Xselection = exports.XsheetView = exports.XsheetViews = exports.Xdimension = exports.XpageSetUpPr = exports.XsheetPr = exports.Xworksheet = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _toArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toArray"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _node = require("./node");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _decorate(decorators, factory, superClass, mixins) { var api = _getDecoratorsApi(); if (mixins) { for (var i = 0; i < mixins.length; i++) { api = mixins[i](api); } } var r = factory(function initialize(O) { api.initializeInstanceElements(O, decorated.elements); }, superClass); var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators); api.initializeClassElements(r.F, decorated.elements); return api.runClassFinishers(r.F, decorated.finishers); }

function _getDecoratorsApi() { _getDecoratorsApi = function _getDecoratorsApi() { return api; }; var api = { elementsDefinitionOrder: [["method"], ["field"]], initializeInstanceElements: function initializeInstanceElements(O, elements) { ["method", "field"].forEach(function (kind) { elements.forEach(function (element) { if (element.kind === kind && element.placement === "own") { this.defineClassElement(O, element); } }, this); }, this); }, initializeClassElements: function initializeClassElements(F, elements) { var proto = F.prototype; ["method", "field"].forEach(function (kind) { elements.forEach(function (element) { var placement = element.placement; if (element.kind === kind && (placement === "static" || placement === "prototype")) { var receiver = placement === "static" ? F : proto; this.defineClassElement(receiver, element); } }, this); }, this); }, defineClassElement: function defineClassElement(receiver, element) { var descriptor = element.descriptor; if (element.kind === "field") { var initializer = element.initializer; descriptor = { enumerable: descriptor.enumerable, writable: descriptor.writable, configurable: descriptor.configurable, value: initializer === void 0 ? void 0 : initializer.call(receiver) }; } Object.defineProperty(receiver, element.key, descriptor); }, decorateClass: function decorateClass(elements, decorators) { var newElements = []; var finishers = []; var placements = { static: [], prototype: [], own: [] }; elements.forEach(function (element) { this.addElementPlacement(element, placements); }, this); elements.forEach(function (element) { if (!_hasDecorators(element)) return newElements.push(element); var elementFinishersExtras = this.decorateElement(element, placements); newElements.push(elementFinishersExtras.element); newElements.push.apply(newElements, elementFinishersExtras.extras); finishers.push.apply(finishers, elementFinishersExtras.finishers); }, this); if (!decorators) { return { elements: newElements, finishers: finishers }; } var result = this.decorateConstructor(newElements, decorators); finishers.push.apply(finishers, result.finishers); result.finishers = finishers; return result; }, addElementPlacement: function addElementPlacement(element, placements, silent) { var keys = placements[element.placement]; if (!silent && keys.indexOf(element.key) !== -1) { throw new TypeError("Duplicated element (" + element.key + ")"); } keys.push(element.key); }, decorateElement: function decorateElement(element, placements) { var extras = []; var finishers = []; for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) { var keys = placements[element.placement]; keys.splice(keys.indexOf(element.key), 1); var elementObject = this.fromElementDescriptor(element); var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject); element = elementFinisherExtras.element; this.addElementPlacement(element, placements); if (elementFinisherExtras.finisher) { finishers.push(elementFinisherExtras.finisher); } var newExtras = elementFinisherExtras.extras; if (newExtras) { for (var j = 0; j < newExtras.length; j++) { this.addElementPlacement(newExtras[j], placements); } extras.push.apply(extras, newExtras); } } return { element: element, finishers: finishers, extras: extras }; }, decorateConstructor: function decorateConstructor(elements, decorators) { var finishers = []; for (var i = decorators.length - 1; i >= 0; i--) { var obj = this.fromClassDescriptor(elements); var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj); if (elementsAndFinisher.finisher !== undefined) { finishers.push(elementsAndFinisher.finisher); } if (elementsAndFinisher.elements !== undefined) { elements = elementsAndFinisher.elements; for (var j = 0; j < elements.length - 1; j++) { for (var k = j + 1; k < elements.length; k++) { if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) { throw new TypeError("Duplicated element (" + elements[j].key + ")"); } } } } } return { elements: elements, finishers: finishers }; }, fromElementDescriptor: function fromElementDescriptor(element) { var obj = { kind: element.kind, key: element.key, placement: element.placement, descriptor: element.descriptor }; var desc = { value: "Descriptor", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); if (element.kind === "field") obj.initializer = element.initializer; return obj; }, toElementDescriptors: function toElementDescriptors(elementObjects) { if (elementObjects === undefined) return; return (0, _toArray2.default)(elementObjects).map(function (elementObject) { var element = this.toElementDescriptor(elementObject); this.disallowProperty(elementObject, "finisher", "An element descriptor"); this.disallowProperty(elementObject, "extras", "An element descriptor"); return element; }, this); }, toElementDescriptor: function toElementDescriptor(elementObject) { var kind = String(elementObject.kind); if (kind !== "method" && kind !== "field") { throw new TypeError('An element descriptor\'s .kind property must be either "method" or' + ' "field", but a decorator created an element descriptor with' + ' .kind "' + kind + '"'); } var key = _toPropertyKey(elementObject.key); var placement = String(elementObject.placement); if (placement !== "static" && placement !== "prototype" && placement !== "own") { throw new TypeError('An element descriptor\'s .placement property must be one of "static",' + ' "prototype" or "own", but a decorator created an element descriptor' + ' with .placement "' + placement + '"'); } var descriptor = elementObject.descriptor; this.disallowProperty(elementObject, "elements", "An element descriptor"); var element = { kind: kind, key: key, placement: placement, descriptor: Object.assign({}, descriptor) }; if (kind !== "field") { this.disallowProperty(elementObject, "initializer", "A method descriptor"); } else { this.disallowProperty(descriptor, "get", "The property descriptor of a field descriptor"); this.disallowProperty(descriptor, "set", "The property descriptor of a field descriptor"); this.disallowProperty(descriptor, "value", "The property descriptor of a field descriptor"); element.initializer = elementObject.initializer; } return element; }, toElementFinisherExtras: function toElementFinisherExtras(elementObject) { var element = this.toElementDescriptor(elementObject); var finisher = _optionalCallableProperty(elementObject, "finisher"); var extras = this.toElementDescriptors(elementObject.extras); return { element: element, finisher: finisher, extras: extras }; }, fromClassDescriptor: function fromClassDescriptor(elements) { var obj = { kind: "class", elements: elements.map(this.fromElementDescriptor, this) }; var desc = { value: "Descriptor", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); return obj; }, toClassDescriptor: function toClassDescriptor(obj) { var kind = String(obj.kind); if (kind !== "class") { throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator' + ' created a class descriptor with .kind "' + kind + '"'); } this.disallowProperty(obj, "key", "A class descriptor"); this.disallowProperty(obj, "placement", "A class descriptor"); this.disallowProperty(obj, "descriptor", "A class descriptor"); this.disallowProperty(obj, "initializer", "A class descriptor"); this.disallowProperty(obj, "extras", "A class descriptor"); var finisher = _optionalCallableProperty(obj, "finisher"); var elements = this.toElementDescriptors(obj.elements); return { elements: elements, finisher: finisher }; }, runClassFinishers: function runClassFinishers(constructor, finishers) { for (var i = 0; i < finishers.length; i++) { var newConstructor = (0, finishers[i])(constructor); if (newConstructor !== undefined) { if (typeof newConstructor !== "function") { throw new TypeError("Finishers must return a constructor."); } constructor = newConstructor; } } return constructor; }, disallowProperty: function disallowProperty(obj, name, objectType) { if (obj[name] !== undefined) { throw new TypeError(objectType + " can't have a ." + name + " property."); } } }; return api; }

function _createElementDescriptor(def) { var key = _toPropertyKey(def.key); var descriptor; if (def.kind === "method") { descriptor = { value: def.value, writable: true, configurable: true, enumerable: false }; } else if (def.kind === "get") { descriptor = { get: def.value, configurable: true, enumerable: false }; } else if (def.kind === "set") { descriptor = { set: def.value, configurable: true, enumerable: false }; } else if (def.kind === "field") { descriptor = { configurable: true, writable: true, enumerable: true }; } var element = { kind: def.kind === "field" ? "field" : "method", key: key, placement: def.static ? "static" : def.kind === "field" ? "own" : "prototype", descriptor: descriptor }; if (def.decorators) element.decorators = def.decorators; if (def.kind === "field") element.initializer = def.value; return element; }

function _coalesceGetterSetter(element, other) { if (element.descriptor.get !== undefined) { other.descriptor.get = element.descriptor.get; } else { other.descriptor.set = element.descriptor.set; } }

function _coalesceClassElements(elements) { var newElements = []; var isSameElement = function isSameElement(other) { return other.kind === "method" && other.key === element.key && other.placement === element.placement; }; for (var i = 0; i < elements.length; i++) { var element = elements[i]; var other; if (element.kind === "method" && (other = newElements.find(isSameElement))) { if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) { if (_hasDecorators(element) || _hasDecorators(other)) { throw new ReferenceError("Duplicated methods (" + element.key + ") can't be decorated."); } other.descriptor = element.descriptor; } else { if (_hasDecorators(element)) { if (_hasDecorators(other)) { throw new ReferenceError("Decorators can't be placed on different accessors with for " + "the same property (" + element.key + ")."); } other.decorators = element.decorators; } _coalesceGetterSetter(element, other); } } else { newElements.push(element); } } return newElements; }

function _hasDecorators(element) { return element.decorators && element.decorators.length; }

function _isDataDescriptor(desc) { return desc !== undefined && !(desc.value === undefined && desc.writable === undefined); }

function _optionalCallableProperty(obj, name) { var value = obj[name]; if (value !== undefined && typeof value !== "function") { throw new TypeError("Expected '" + name + "' to be a function"); } return value; }

function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }

function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var Xworksheet = _decorate([(0, _node.props)('xmlns', 'xmlns:r')], function (_initialize, _Node) {
  var Xworksheet = /*#__PURE__*/function (_Node2) {
    (0, _inherits2.default)(Xworksheet, _Node2);

    var _super = _createSuper(Xworksheet);

    function Xworksheet() {
      var _this;

      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var children = arguments.length > 1 ? arguments[1] : undefined;
      (0, _classCallCheck2.default)(this, Xworksheet);
      attrs['xmlns'] = attrs['xmlns'] || 'http://schemas.openxmlformats.org/spreadsheetml/2006/main';
      attrs['xmlns:r'] = attrs['xmlns:r'] || 'http://schemas.openxmlformats.org/officeDocument/2006/relationships';
      _this = _super.call(this, attrs, children);

      _initialize((0, _assertThisInitialized2.default)(_this));

      _this[_node.HEAD] = '<?xml version="1.0" encoding="UTF-8"?>';
      return _this;
    }

    return Xworksheet;
  }(_Node);

  return {
    F: Xworksheet,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xworksheet";
      }

    }, {
      kind: "field",
      key: "sheetPr",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "sheetViews",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "sheetFormatPr",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "printOptions",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "pageMargins",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "pageSetup",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "headerFooter",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "mergeCells",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "dimension",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "cols",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "sheetData",

      value() {
        return null;
      }

    }, {
      kind: "method",
      key: "render",
      value: function render() {
        this.children = [];
        if (this.sheetPr) this.children.push(this.sheetPr);
        if (this.dimension) this.children.push(this.dimension);
        if (this.sheetViews) this.children.push(this.sheetViews);
        if (this.sheetFormatPr) this.children.push(this.sheetFormatPr);
        if (this.cols) this.children.push(this.cols);
        if (this.sheetData) this.children.push(this.sheetData);
        if (this.mergeCells) this.children.push(this.mergeCells);
        if (this.printOptions) this.children.push(this.printOptions);
        if (this.pageMargins) this.children.push(this.pageMargins);
        if (this.pageSetup) this.children.push(this.pageSetup);
        if (this.headerFooter) this.children.push(this.headerFooter);
        return (0, _get2.default)((0, _getPrototypeOf2.default)(Xworksheet.prototype), "render", this).call(this);
      }
    }]
  };
}, _node.Node);

exports.Xworksheet = Xworksheet;

var XsheetPr = _decorate([(0, _node.props)('filterMode')], function (_initialize2, _Node3) {
  var XsheetPr = /*#__PURE__*/function (_Node4) {
    (0, _inherits2.default)(XsheetPr, _Node4);

    var _super2 = _createSuper(XsheetPr);

    function XsheetPr() {
      var _this2;

      (0, _classCallCheck2.default)(this, XsheetPr);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this2 = _super2.call.apply(_super2, [this].concat(args));

      _initialize2((0, _assertThisInitialized2.default)(_this2));

      return _this2;
    }

    return XsheetPr;
  }(_Node3);

  return {
    F: XsheetPr,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XsheetPr";
      }

    }]
  };
}, _node.Node);

exports.XsheetPr = XsheetPr;

var XpageSetUpPr = _decorate([(0, _node.props)('fitToPage')], function (_initialize3, _Node5) {
  var XpageSetUpPr = /*#__PURE__*/function (_Node6) {
    (0, _inherits2.default)(XpageSetUpPr, _Node6);

    var _super3 = _createSuper(XpageSetUpPr);

    function XpageSetUpPr() {
      var _this3;

      (0, _classCallCheck2.default)(this, XpageSetUpPr);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this3 = _super3.call.apply(_super3, [this].concat(args));

      _initialize3((0, _assertThisInitialized2.default)(_this3));

      return _this3;
    }

    return XpageSetUpPr;
  }(_Node5);

  return {
    F: XpageSetUpPr,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XpageSetUpPr";
      }

    }]
  };
}, _node.Node);

exports.XpageSetUpPr = XpageSetUpPr;

var Xdimension = _decorate([(0, _node.props)('ref')], function (_initialize4, _Node7) {
  var Xdimension = /*#__PURE__*/function (_Node8) {
    (0, _inherits2.default)(Xdimension, _Node8);

    var _super4 = _createSuper(Xdimension);

    function Xdimension() {
      var _this4;

      (0, _classCallCheck2.default)(this, Xdimension);

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      _this4 = _super4.call.apply(_super4, [this].concat(args));

      _initialize4((0, _assertThisInitialized2.default)(_this4));

      return _this4;
    }

    return Xdimension;
  }(_Node7);

  return {
    F: Xdimension,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xdimension";
      }

    }]
  };
}, _node.Node);

exports.Xdimension = Xdimension;

var XsheetViews = /*#__PURE__*/function (_Node9) {
  (0, _inherits2.default)(XsheetViews, _Node9);

  var _super5 = _createSuper(XsheetViews);

  function XsheetViews() {
    (0, _classCallCheck2.default)(this, XsheetViews);
    return _super5.apply(this, arguments);
  }

  return XsheetViews;
}(_node.Node);

exports.XsheetViews = XsheetViews;
(0, _defineProperty2.default)(XsheetViews, "name", "XsheetViews");

var XsheetView = _decorate([(0, _node.props)('windowProtection', 'showFormulas', 'showGridLines', 'showRowColHeaders', 'showZeros', 'rightToLeft', 'tabSelected', 'showOutlineSymbols', 'defaultGridColor', 'view', 'topLeftCell', 'colorId', 'zoomScale', 'zoomScaleNormal', 'zoomScalePageLayoutView', 'workbookViewId')], function (_initialize5, _Node10) {
  var XsheetView = /*#__PURE__*/function (_Node11) {
    (0, _inherits2.default)(XsheetView, _Node11);

    var _super6 = _createSuper(XsheetView);

    function XsheetView() {
      var _this5;

      (0, _classCallCheck2.default)(this, XsheetView);

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      _this5 = _super6.call.apply(_super6, [this].concat(args));

      _initialize5((0, _assertThisInitialized2.default)(_this5));

      return _this5;
    }

    return XsheetView;
  }(_Node10);

  return {
    F: XsheetView,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XsheetView";
      }

    }]
  };
}, _node.Node);

exports.XsheetView = XsheetView;

var Xselection = _decorate([(0, _node.props)('pane', 'activeCell', 'activeCellId', 'sqref')], function (_initialize6, _Node12) {
  var Xselection = /*#__PURE__*/function (_Node13) {
    (0, _inherits2.default)(Xselection, _Node13);

    var _super7 = _createSuper(Xselection);

    function Xselection() {
      var _this6;

      (0, _classCallCheck2.default)(this, Xselection);

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      _this6 = _super7.call.apply(_super7, [this].concat(args));

      _initialize6((0, _assertThisInitialized2.default)(_this6));

      return _this6;
    }

    return Xselection;
  }(_Node12);

  return {
    F: Xselection,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xselection";
      }

    }]
  };
}, _node.Node);

exports.Xselection = Xselection;

var Xpane = _decorate([(0, _node.props)('xSplit', 'ySplit', 'topLeftCell', 'activePane', 'state')], function (_initialize7, _Node14) {
  var Xpane = /*#__PURE__*/function (_Node15) {
    (0, _inherits2.default)(Xpane, _Node15);

    var _super8 = _createSuper(Xpane);

    function Xpane() {
      var _this7;

      (0, _classCallCheck2.default)(this, Xpane);

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      _this7 = _super8.call.apply(_super8, [this].concat(args));

      _initialize7((0, _assertThisInitialized2.default)(_this7));

      return _this7;
    }

    return Xpane;
  }(_Node14);

  return {
    F: Xpane,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xpane";
      }

    }]
  };
}, _node.Node);

exports.Xpane = Xpane;

var XsheetFormatPr = _decorate([(0, _node.props)('defaultColWidth', 'defaultRowHeight', 'outlineLevelCol', 'outlineLevelRow')], function (_initialize8, _Node16) {
  var XsheetFormatPr = /*#__PURE__*/function (_Node17) {
    (0, _inherits2.default)(XsheetFormatPr, _Node17);

    var _super9 = _createSuper(XsheetFormatPr);

    function XsheetFormatPr() {
      var _this8;

      (0, _classCallCheck2.default)(this, XsheetFormatPr);

      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      _this8 = _super9.call.apply(_super9, [this].concat(args));

      _initialize8((0, _assertThisInitialized2.default)(_this8));

      return _this8;
    }

    return XsheetFormatPr;
  }(_Node16);

  return {
    F: XsheetFormatPr,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XsheetFormatPr";
      }

    }]
  };
}, _node.Node);

exports.XsheetFormatPr = XsheetFormatPr;

var Xcols = /*#__PURE__*/function (_Node18) {
  (0, _inherits2.default)(Xcols, _Node18);

  var _super10 = _createSuper(Xcols);

  function Xcols() {
    (0, _classCallCheck2.default)(this, Xcols);
    return _super10.apply(this, arguments);
  }

  return Xcols;
}(_node.Node);

exports.Xcols = Xcols;
(0, _defineProperty2.default)(Xcols, "name", "Xcols");

var Xcol = _decorate([(0, _node.props)('collapsed', 'hidden', 'max', 'min', 'style', 'width', 'customWidth', 'outlineLevel')], function (_initialize9, _Node19) {
  var Xcol = /*#__PURE__*/function (_Node20) {
    (0, _inherits2.default)(Xcol, _Node20);

    var _super11 = _createSuper(Xcol);

    function Xcol() {
      var _this9;

      (0, _classCallCheck2.default)(this, Xcol);

      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }

      _this9 = _super11.call.apply(_super11, [this].concat(args));

      _initialize9((0, _assertThisInitialized2.default)(_this9));

      return _this9;
    }

    return Xcol;
  }(_Node19);

  return {
    F: Xcol,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xcol";
      }

    }]
  };
}, _node.Node);

exports.Xcol = Xcol;

var XsheetData = /*#__PURE__*/function (_Node21) {
  (0, _inherits2.default)(XsheetData, _Node21);

  var _super12 = _createSuper(XsheetData);

  function XsheetData() {
    (0, _classCallCheck2.default)(this, XsheetData);
    return _super12.apply(this, arguments);
  }

  return XsheetData;
}(_node.Node);

exports.XsheetData = XsheetData;
(0, _defineProperty2.default)(XsheetData, "name", "XsheetData");

var Xrow = _decorate([(0, _node.props)('r', 'spans', 'hidden', 'ht', 'customHeight', 'outlineLevel')], function (_initialize10, _Node22) {
  var Xrow = /*#__PURE__*/function (_Node23) {
    (0, _inherits2.default)(Xrow, _Node23);

    var _super13 = _createSuper(Xrow);

    function Xrow() {
      var _this10;

      (0, _classCallCheck2.default)(this, Xrow);

      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }

      _this10 = _super13.call.apply(_super13, [this].concat(args));

      _initialize10((0, _assertThisInitialized2.default)(_this10));

      return _this10;
    }

    return Xrow;
  }(_Node22);

  return {
    F: Xrow,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xrow";
      }

    }]
  };
}, _node.Node);

exports.Xrow = Xrow;

var Xc = _decorate([(0, _node.props)('r', 's', 't')], function (_initialize11, _Node24) {
  var Xc = /*#__PURE__*/function (_Node25) {
    (0, _inherits2.default)(Xc, _Node25);

    var _super14 = _createSuper(Xc);

    function Xc(attrs, children) {
      var _this11;

      (0, _classCallCheck2.default)(this, Xc);
      _this11 = _super14.call(this, attrs, children);

      _initialize11((0, _assertThisInitialized2.default)(_this11));

      _this11.f = null;
      _this11.v = null;
      return _this11;
    }

    return Xc;
  }(_Node24);

  return {
    F: Xc,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xc";
      }

    }, {
      kind: "method",
      key: "render",
      value: function render() {
        if (this.f !== null) this.children.push(this.f);
        if (this.v !== null) this.children.push(new _node.Node({}, [this.v], 'v'));
        return (0, _get2.default)((0, _getPrototypeOf2.default)(Xc.prototype), "render", this).call(this);
      }
    }]
  };
}, _node.Node);

exports.Xc = Xc;

var Xf = _decorate([(0, _node.props)('t', 'ref', 'si')], function (_initialize12, _Node26) {
  var Xf = /*#__PURE__*/function (_Node27) {
    (0, _inherits2.default)(Xf, _Node27);

    var _super15 = _createSuper(Xf);

    function Xf() {
      var _this12;

      (0, _classCallCheck2.default)(this, Xf);

      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
        args[_key10] = arguments[_key10];
      }

      _this12 = _super15.call.apply(_super15, [this].concat(args));

      _initialize12((0, _assertThisInitialized2.default)(_this12));

      return _this12;
    }

    return Xf;
  }(_Node26);

  return {
    F: Xf,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xf";
      }

    }]
  };
}, _node.Node);

exports.Xf = Xf;

var XmergeCells = _decorate([(0, _node.props)('count')], function (_initialize13, _Node28) {
  var XmergeCells = /*#__PURE__*/function (_Node29) {
    (0, _inherits2.default)(XmergeCells, _Node29);

    var _super16 = _createSuper(XmergeCells);

    function XmergeCells() {
      var _this13;

      (0, _classCallCheck2.default)(this, XmergeCells);

      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {
        args[_key11] = arguments[_key11];
      }

      _this13 = _super16.call.apply(_super16, [this].concat(args));

      _initialize13((0, _assertThisInitialized2.default)(_this13));

      return _this13;
    }

    return XmergeCells;
  }(_Node28);

  return {
    F: XmergeCells,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XmergeCells";
      }

    }]
  };
}, _node.Node);

exports.XmergeCells = XmergeCells;

var XmergeCell = _decorate([(0, _node.props)('ref')], function (_initialize14, _Node30) {
  var XmergeCell = /*#__PURE__*/function (_Node31) {
    (0, _inherits2.default)(XmergeCell, _Node31);

    var _super17 = _createSuper(XmergeCell);

    function XmergeCell() {
      var _this14;

      (0, _classCallCheck2.default)(this, XmergeCell);

      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
        args[_key12] = arguments[_key12];
      }

      _this14 = _super17.call.apply(_super17, [this].concat(args));

      _initialize14((0, _assertThisInitialized2.default)(_this14));

      return _this14;
    }

    return XmergeCell;
  }(_Node30);

  return {
    F: XmergeCell,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XmergeCell";
      }

    }]
  };
}, _node.Node);

exports.XmergeCell = XmergeCell;

var XprintOptions = _decorate([(0, _node.props)('headings', 'gridLines', 'gridLinesSet', 'horizontalCentered', 'verticalCentered')], function (_initialize15, _Node32) {
  var XprintOptions = /*#__PURE__*/function (_Node33) {
    (0, _inherits2.default)(XprintOptions, _Node33);

    var _super18 = _createSuper(XprintOptions);

    function XprintOptions() {
      var _this15;

      (0, _classCallCheck2.default)(this, XprintOptions);

      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
        args[_key13] = arguments[_key13];
      }

      _this15 = _super18.call.apply(_super18, [this].concat(args));

      _initialize15((0, _assertThisInitialized2.default)(_this15));

      return _this15;
    }

    return XprintOptions;
  }(_Node32);

  return {
    F: XprintOptions,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XprintOptions";
      }

    }]
  };
}, _node.Node);

exports.XprintOptions = XprintOptions;

var XpageMargins = _decorate([(0, _node.props)('left', 'right', 'top', 'bottom', 'header', 'footer')], function (_initialize16, _Node34) {
  var XpageMargins = /*#__PURE__*/function (_Node35) {
    (0, _inherits2.default)(XpageMargins, _Node35);

    var _super19 = _createSuper(XpageMargins);

    function XpageMargins() {
      var _this16;

      (0, _classCallCheck2.default)(this, XpageMargins);

      for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
        args[_key14] = arguments[_key14];
      }

      _this16 = _super19.call.apply(_super19, [this].concat(args));

      _initialize16((0, _assertThisInitialized2.default)(_this16));

      return _this16;
    }

    return XpageMargins;
  }(_Node34);

  return {
    F: XpageMargins,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XpageMargins";
      }

    }]
  };
}, _node.Node);

exports.XpageMargins = XpageMargins;

var XpageSetup = _decorate([(0, _node.props)('paperSize', 'scale', 'firstPageNumber', 'fitToWidth', 'fitToHeight', 'pageOrder', 'orientation', 'usePrinterDefaults', 'blackAndWhite', 'draft', 'cellComments', 'useFirstPageNumber', 'horizontalDpi', 'verticalDpi', 'copies')], function (_initialize17, _Node36) {
  var XpageSetup = /*#__PURE__*/function (_Node37) {
    (0, _inherits2.default)(XpageSetup, _Node37);

    var _super20 = _createSuper(XpageSetup);

    function XpageSetup() {
      var _this17;

      (0, _classCallCheck2.default)(this, XpageSetup);

      for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {
        args[_key15] = arguments[_key15];
      }

      _this17 = _super20.call.apply(_super20, [this].concat(args));

      _initialize17((0, _assertThisInitialized2.default)(_this17));

      return _this17;
    }

    return XpageSetup;
  }(_Node36);

  return {
    F: XpageSetup,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XpageSetup";
      }

    }]
  };
}, _node.Node);

exports.XpageSetup = XpageSetup;

var XheaderFooter = _decorate([(0, _node.props)('differentFirst', 'differentOddEven')], function (_initialize18, _Node38) {
  var XheaderFooter = /*#__PURE__*/function (_Node39) {
    (0, _inherits2.default)(XheaderFooter, _Node39);

    var _super21 = _createSuper(XheaderFooter);

    function XheaderFooter(attrs, children) {
      var _this18;

      (0, _classCallCheck2.default)(this, XheaderFooter);
      _this18 = _super21.call(this, attrs, children);

      _initialize18((0, _assertThisInitialized2.default)(_this18));

      _this18.oddHeader = null;
      _this18.oddFooter = null;
      return _this18;
    }

    return XheaderFooter;
  }(_Node38);

  return {
    F: XheaderFooter,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XheaderFooter";
      }

    }, {
      kind: "method",
      key: "render",
      value: function render() {
        if (this.oddHeader !== null) this.children.push(new _node.Node({}, [this.oddHeader], 'oddHeader'));
        if (this.oddFooter !== null) this.children.push(new _node.Node({}, [this.oddFooter], 'oddFooter'));
        return (0, _get2.default)((0, _getPrototypeOf2.default)(XheaderFooter.prototype), "render", this).call(this);
      }
    }]
  };
}, _node.Node);

exports.XheaderFooter = XheaderFooter;

function makeXworksheet() {
  var sheet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Xworksheet();
  sheet.sheetPr = new XsheetPr({
    filterMode: false
  }, [new XpageSetUpPr({
    fitToPage: false
  })]);
  sheet.sheetViews = new XsheetViews({}, [new XsheetView({
    colorId: 64,
    defaultGridColor: true,
    rightToLeft: false,
    showFormulas: false,
    showGridLines: true,
    showOutlineSymbols: true,
    showRowColHeaders: true,
    showZeros: true,
    tabSelected: false,
    topLeftCell: 'A1',
    view: 'normal',
    windowProtection: false,
    workbookViewId: 0,
    zoomScale: 100,
    zoomScaleNormal: 100,
    zoomScalePageLayoutView: 100
  }, [new Xselection({
    activeCell: 'A1',
    activeCellId: 0,
    pane: 'topLeft',
    sqref: 'A1'
  })])]);
  sheet.sheetFormatPr = new XsheetFormatPr({
    defaultRowHeight: '12.85'
  });
  sheet.printOptions = new XprintOptions({
    gridLines: false,
    gridLinesSet: true,
    headings: false,
    horizontalCentered: false,
    verticalCentered: false
  });
  sheet.pageMargins = new XpageMargins({
    left: 0.7875,
    right: 0.7875,
    top: 1.05277777777778,
    bottom: 1.05277777777778,
    header: 0.7875,
    footer: 0.7875
  });
  sheet.pageSetup = new XpageSetup({
    blackAndWhite: false,
    cellComments: 'none',
    copies: 1,
    draft: false,
    firstPageNumber: 1,
    fitToHeight: 1,
    fitToWidth: 1,
    horizontalDpi: 300,
    orientation: 'portrait',
    pageOrder: 'downThenOver',
    paperSize: 9,
    scale: 100,
    useFirstPageNumber: true,
    usePrinterDefaults: false,
    verticalDpi: 300
  });
  var headerFooter = new XheaderFooter();
  headerFooter.oddHeader = '&C&"Times New Roman,Regular"&12&A';
  headerFooter.oddFooter = '&C&"Times New Roman,Regular"&12Page &P';
  sheet.headerFooter = headerFooter;
  return sheet;
}