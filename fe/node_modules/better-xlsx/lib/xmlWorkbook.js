"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeWorkbookRels = makeWorkbookRels;
exports.makeXworkbook = makeXworkbook;
exports.XcalcPr = exports.Xsheet = exports.Xsheets = exports.XworkbookView = exports.XbookViews = exports.XworkbookProtection = exports.XworkbookPr = exports.XfileVersion = exports.Xworkbook = exports.XRelationship = exports.XRelationships = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _toArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toArray"));

var _node = require("./node");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _decorate(decorators, factory, superClass, mixins) { var api = _getDecoratorsApi(); if (mixins) { for (var i = 0; i < mixins.length; i++) { api = mixins[i](api); } } var r = factory(function initialize(O) { api.initializeInstanceElements(O, decorated.elements); }, superClass); var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators); api.initializeClassElements(r.F, decorated.elements); return api.runClassFinishers(r.F, decorated.finishers); }

function _getDecoratorsApi() { _getDecoratorsApi = function _getDecoratorsApi() { return api; }; var api = { elementsDefinitionOrder: [["method"], ["field"]], initializeInstanceElements: function initializeInstanceElements(O, elements) { ["method", "field"].forEach(function (kind) { elements.forEach(function (element) { if (element.kind === kind && element.placement === "own") { this.defineClassElement(O, element); } }, this); }, this); }, initializeClassElements: function initializeClassElements(F, elements) { var proto = F.prototype; ["method", "field"].forEach(function (kind) { elements.forEach(function (element) { var placement = element.placement; if (element.kind === kind && (placement === "static" || placement === "prototype")) { var receiver = placement === "static" ? F : proto; this.defineClassElement(receiver, element); } }, this); }, this); }, defineClassElement: function defineClassElement(receiver, element) { var descriptor = element.descriptor; if (element.kind === "field") { var initializer = element.initializer; descriptor = { enumerable: descriptor.enumerable, writable: descriptor.writable, configurable: descriptor.configurable, value: initializer === void 0 ? void 0 : initializer.call(receiver) }; } Object.defineProperty(receiver, element.key, descriptor); }, decorateClass: function decorateClass(elements, decorators) { var newElements = []; var finishers = []; var placements = { static: [], prototype: [], own: [] }; elements.forEach(function (element) { this.addElementPlacement(element, placements); }, this); elements.forEach(function (element) { if (!_hasDecorators(element)) return newElements.push(element); var elementFinishersExtras = this.decorateElement(element, placements); newElements.push(elementFinishersExtras.element); newElements.push.apply(newElements, elementFinishersExtras.extras); finishers.push.apply(finishers, elementFinishersExtras.finishers); }, this); if (!decorators) { return { elements: newElements, finishers: finishers }; } var result = this.decorateConstructor(newElements, decorators); finishers.push.apply(finishers, result.finishers); result.finishers = finishers; return result; }, addElementPlacement: function addElementPlacement(element, placements, silent) { var keys = placements[element.placement]; if (!silent && keys.indexOf(element.key) !== -1) { throw new TypeError("Duplicated element (" + element.key + ")"); } keys.push(element.key); }, decorateElement: function decorateElement(element, placements) { var extras = []; var finishers = []; for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) { var keys = placements[element.placement]; keys.splice(keys.indexOf(element.key), 1); var elementObject = this.fromElementDescriptor(element); var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject); element = elementFinisherExtras.element; this.addElementPlacement(element, placements); if (elementFinisherExtras.finisher) { finishers.push(elementFinisherExtras.finisher); } var newExtras = elementFinisherExtras.extras; if (newExtras) { for (var j = 0; j < newExtras.length; j++) { this.addElementPlacement(newExtras[j], placements); } extras.push.apply(extras, newExtras); } } return { element: element, finishers: finishers, extras: extras }; }, decorateConstructor: function decorateConstructor(elements, decorators) { var finishers = []; for (var i = decorators.length - 1; i >= 0; i--) { var obj = this.fromClassDescriptor(elements); var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj); if (elementsAndFinisher.finisher !== undefined) { finishers.push(elementsAndFinisher.finisher); } if (elementsAndFinisher.elements !== undefined) { elements = elementsAndFinisher.elements; for (var j = 0; j < elements.length - 1; j++) { for (var k = j + 1; k < elements.length; k++) { if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) { throw new TypeError("Duplicated element (" + elements[j].key + ")"); } } } } } return { elements: elements, finishers: finishers }; }, fromElementDescriptor: function fromElementDescriptor(element) { var obj = { kind: element.kind, key: element.key, placement: element.placement, descriptor: element.descriptor }; var desc = { value: "Descriptor", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); if (element.kind === "field") obj.initializer = element.initializer; return obj; }, toElementDescriptors: function toElementDescriptors(elementObjects) { if (elementObjects === undefined) return; return (0, _toArray2.default)(elementObjects).map(function (elementObject) { var element = this.toElementDescriptor(elementObject); this.disallowProperty(elementObject, "finisher", "An element descriptor"); this.disallowProperty(elementObject, "extras", "An element descriptor"); return element; }, this); }, toElementDescriptor: function toElementDescriptor(elementObject) { var kind = String(elementObject.kind); if (kind !== "method" && kind !== "field") { throw new TypeError('An element descriptor\'s .kind property must be either "method" or' + ' "field", but a decorator created an element descriptor with' + ' .kind "' + kind + '"'); } var key = _toPropertyKey(elementObject.key); var placement = String(elementObject.placement); if (placement !== "static" && placement !== "prototype" && placement !== "own") { throw new TypeError('An element descriptor\'s .placement property must be one of "static",' + ' "prototype" or "own", but a decorator created an element descriptor' + ' with .placement "' + placement + '"'); } var descriptor = elementObject.descriptor; this.disallowProperty(elementObject, "elements", "An element descriptor"); var element = { kind: kind, key: key, placement: placement, descriptor: Object.assign({}, descriptor) }; if (kind !== "field") { this.disallowProperty(elementObject, "initializer", "A method descriptor"); } else { this.disallowProperty(descriptor, "get", "The property descriptor of a field descriptor"); this.disallowProperty(descriptor, "set", "The property descriptor of a field descriptor"); this.disallowProperty(descriptor, "value", "The property descriptor of a field descriptor"); element.initializer = elementObject.initializer; } return element; }, toElementFinisherExtras: function toElementFinisherExtras(elementObject) { var element = this.toElementDescriptor(elementObject); var finisher = _optionalCallableProperty(elementObject, "finisher"); var extras = this.toElementDescriptors(elementObject.extras); return { element: element, finisher: finisher, extras: extras }; }, fromClassDescriptor: function fromClassDescriptor(elements) { var obj = { kind: "class", elements: elements.map(this.fromElementDescriptor, this) }; var desc = { value: "Descriptor", configurable: true }; Object.defineProperty(obj, Symbol.toStringTag, desc); return obj; }, toClassDescriptor: function toClassDescriptor(obj) { var kind = String(obj.kind); if (kind !== "class") { throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator' + ' created a class descriptor with .kind "' + kind + '"'); } this.disallowProperty(obj, "key", "A class descriptor"); this.disallowProperty(obj, "placement", "A class descriptor"); this.disallowProperty(obj, "descriptor", "A class descriptor"); this.disallowProperty(obj, "initializer", "A class descriptor"); this.disallowProperty(obj, "extras", "A class descriptor"); var finisher = _optionalCallableProperty(obj, "finisher"); var elements = this.toElementDescriptors(obj.elements); return { elements: elements, finisher: finisher }; }, runClassFinishers: function runClassFinishers(constructor, finishers) { for (var i = 0; i < finishers.length; i++) { var newConstructor = (0, finishers[i])(constructor); if (newConstructor !== undefined) { if (typeof newConstructor !== "function") { throw new TypeError("Finishers must return a constructor."); } constructor = newConstructor; } } return constructor; }, disallowProperty: function disallowProperty(obj, name, objectType) { if (obj[name] !== undefined) { throw new TypeError(objectType + " can't have a ." + name + " property."); } } }; return api; }

function _createElementDescriptor(def) { var key = _toPropertyKey(def.key); var descriptor; if (def.kind === "method") { descriptor = { value: def.value, writable: true, configurable: true, enumerable: false }; } else if (def.kind === "get") { descriptor = { get: def.value, configurable: true, enumerable: false }; } else if (def.kind === "set") { descriptor = { set: def.value, configurable: true, enumerable: false }; } else if (def.kind === "field") { descriptor = { configurable: true, writable: true, enumerable: true }; } var element = { kind: def.kind === "field" ? "field" : "method", key: key, placement: def.static ? "static" : def.kind === "field" ? "own" : "prototype", descriptor: descriptor }; if (def.decorators) element.decorators = def.decorators; if (def.kind === "field") element.initializer = def.value; return element; }

function _coalesceGetterSetter(element, other) { if (element.descriptor.get !== undefined) { other.descriptor.get = element.descriptor.get; } else { other.descriptor.set = element.descriptor.set; } }

function _coalesceClassElements(elements) { var newElements = []; var isSameElement = function isSameElement(other) { return other.kind === "method" && other.key === element.key && other.placement === element.placement; }; for (var i = 0; i < elements.length; i++) { var element = elements[i]; var other; if (element.kind === "method" && (other = newElements.find(isSameElement))) { if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) { if (_hasDecorators(element) || _hasDecorators(other)) { throw new ReferenceError("Duplicated methods (" + element.key + ") can't be decorated."); } other.descriptor = element.descriptor; } else { if (_hasDecorators(element)) { if (_hasDecorators(other)) { throw new ReferenceError("Decorators can't be placed on different accessors with for " + "the same property (" + element.key + ")."); } other.decorators = element.decorators; } _coalesceGetterSetter(element, other); } } else { newElements.push(element); } } return newElements; }

function _hasDecorators(element) { return element.decorators && element.decorators.length; }

function _isDataDescriptor(desc) { return desc !== undefined && !(desc.value === undefined && desc.writable === undefined); }

function _optionalCallableProperty(obj, name) { var value = obj[name]; if (value !== undefined && typeof value !== "function") { throw new TypeError("Expected '" + name + "' to be a function"); } return value; }

function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }

function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var XRelationships = _decorate([(0, _node.props)('xmlns')], function (_initialize, _Node) {
  var XRelationships = /*#__PURE__*/function (_Node2) {
    (0, _inherits2.default)(XRelationships, _Node2);

    var _super = _createSuper(XRelationships);

    function XRelationships(_ref, children) {
      var _this;

      var _ref$xmlns = _ref.xmlns,
          xmlns = _ref$xmlns === void 0 ? 'http://schemas.openxmlformats.org/package/2006/relationships' : _ref$xmlns;
      (0, _classCallCheck2.default)(this, XRelationships);
      _this = _super.call(this, {
        xmlns
      }, children);

      _initialize((0, _assertThisInitialized2.default)(_this));

      _this[_node.HEAD] = '<?xml version="1.0" encoding="UTF-8"?>';
      return _this;
    }

    return XRelationships;
  }(_Node);

  return {
    F: XRelationships,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XRelationships";
      }

    }]
  };
}, _node.Node);

exports.XRelationships = XRelationships;

var XRelationship = _decorate([(0, _node.props)('Id', 'Target', 'Type')], function (_initialize2, _Node3) {
  var XRelationship = /*#__PURE__*/function (_Node4) {
    (0, _inherits2.default)(XRelationship, _Node4);

    var _super2 = _createSuper(XRelationship);

    function XRelationship() {
      var _this2;

      (0, _classCallCheck2.default)(this, XRelationship);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this2 = _super2.call.apply(_super2, [this].concat(args));

      _initialize2((0, _assertThisInitialized2.default)(_this2));

      return _this2;
    }

    return XRelationship;
  }(_Node3);

  return {
    F: XRelationship,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XRelationship";
      }

    }]
  };
}, _node.Node);

exports.XRelationship = XRelationship;

var Xworkbook = _decorate([(0, _node.props)('xmlns', 'xmlns:r')], function (_initialize3, _Node5) {
  var Xworkbook = /*#__PURE__*/function (_Node6) {
    (0, _inherits2.default)(Xworkbook, _Node6);

    var _super3 = _createSuper(Xworkbook);

    function Xworkbook() {
      var _this3;

      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var children = arguments.length > 1 ? arguments[1] : undefined;
      (0, _classCallCheck2.default)(this, Xworkbook);
      attrs['xmlns'] = attrs['xmlns'] || 'http://schemas.openxmlformats.org/spreadsheetml/2006/main';
      attrs['xmlns:r'] = attrs['xmlns:r'] || 'http://schemas.openxmlformats.org/officeDocument/2006/relationships';
      _this3 = _super3.call(this, attrs, children);

      _initialize3((0, _assertThisInitialized2.default)(_this3));

      _this3[_node.HEAD] = '<?xml version="1.0" encoding="UTF-8"?>';
      return _this3;
    }

    return Xworkbook;
  }(_Node5);

  return {
    F: Xworkbook,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xworkbook";
      }

    }, {
      kind: "field",
      key: "fileVersion",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "workbookPr",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "bookViews",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "sheets",

      value() {
        return null;
      }

    }, {
      kind: "field",
      key: "calcPr",

      value() {
        return null;
      }

    }, {
      kind: "method",
      key: "render",
      value: function render() {
        this.children = [];
        if (this.fileVersion) this.children.push(this.fileVersion);
        if (this.workbookPr) this.children.push(this.workbookPr);
        if (this.bookViews) this.children.push(this.bookViews);
        if (this.sheets) this.children.push(this.sheets);
        if (this.calcPr) this.children.push(this.calcPr);
        return (0, _get2.default)((0, _getPrototypeOf2.default)(Xworkbook.prototype), "render", this).call(this);
      }
    }]
  };
}, _node.Node);

exports.Xworkbook = Xworkbook;

var XfileVersion = _decorate([(0, _node.props)('appName', 'lastEdited', 'lowestEdited', 'rupBuild')], function (_initialize4, _Node7) {
  var XfileVersion = /*#__PURE__*/function (_Node8) {
    (0, _inherits2.default)(XfileVersion, _Node8);

    var _super4 = _createSuper(XfileVersion);

    function XfileVersion() {
      var _this4;

      (0, _classCallCheck2.default)(this, XfileVersion);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this4 = _super4.call.apply(_super4, [this].concat(args));

      _initialize4((0, _assertThisInitialized2.default)(_this4));

      return _this4;
    }

    return XfileVersion;
  }(_Node7);

  return {
    F: XfileVersion,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XfileVersion";
      }

    }]
  };
}, _node.Node);

exports.XfileVersion = XfileVersion;

var XworkbookPr = _decorate([(0, _node.props)('defaultThemeVersion', 'backupFile', 'showObjects', 'date1904')], function (_initialize5, _Node9) {
  var XworkbookPr = /*#__PURE__*/function (_Node10) {
    (0, _inherits2.default)(XworkbookPr, _Node10);

    var _super5 = _createSuper(XworkbookPr);

    function XworkbookPr() {
      var _this5;

      (0, _classCallCheck2.default)(this, XworkbookPr);

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      _this5 = _super5.call.apply(_super5, [this].concat(args));

      _initialize5((0, _assertThisInitialized2.default)(_this5));

      return _this5;
    }

    return XworkbookPr;
  }(_Node9);

  return {
    F: XworkbookPr,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XworkbookPr";
      }

    }]
  };
}, _node.Node);

exports.XworkbookPr = XworkbookPr;

var XworkbookProtection = /*#__PURE__*/function (_Node11) {
  (0, _inherits2.default)(XworkbookProtection, _Node11);

  var _super6 = _createSuper(XworkbookProtection);

  function XworkbookProtection() {
    (0, _classCallCheck2.default)(this, XworkbookProtection);
    return _super6.apply(this, arguments);
  }

  return XworkbookProtection;
}(_node.Node);

exports.XworkbookProtection = XworkbookProtection;
(0, _defineProperty2.default)(XworkbookProtection, "name", "XworkbookProtection");

var XbookViews = /*#__PURE__*/function (_Node12) {
  (0, _inherits2.default)(XbookViews, _Node12);

  var _super7 = _createSuper(XbookViews);

  function XbookViews() {
    (0, _classCallCheck2.default)(this, XbookViews);
    return _super7.apply(this, arguments);
  }

  return XbookViews;
}(_node.Node);

exports.XbookViews = XbookViews;
(0, _defineProperty2.default)(XbookViews, "name", "XbookViews");

var XworkbookView = _decorate([(0, _node.props)('activeTab', 'firstSheet', 'showHorizontalScroll', 'showVerticalScroll', 'showSheetTabs', 'tabRatio', 'windowHeight', 'windowWidth', 'xWindow', 'yWindow')], function (_initialize6, _Node13) {
  var XworkbookView = /*#__PURE__*/function (_Node14) {
    (0, _inherits2.default)(XworkbookView, _Node14);

    var _super8 = _createSuper(XworkbookView);

    function XworkbookView() {
      var _this6;

      (0, _classCallCheck2.default)(this, XworkbookView);

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      _this6 = _super8.call.apply(_super8, [this].concat(args));

      _initialize6((0, _assertThisInitialized2.default)(_this6));

      return _this6;
    }

    return XworkbookView;
  }(_Node13);

  return {
    F: XworkbookView,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XworkbookView";
      }

    }]
  };
}, _node.Node);

exports.XworkbookView = XworkbookView;

var Xsheets = /*#__PURE__*/function (_Node15) {
  (0, _inherits2.default)(Xsheets, _Node15);

  var _super9 = _createSuper(Xsheets);

  function Xsheets() {
    (0, _classCallCheck2.default)(this, Xsheets);
    return _super9.apply(this, arguments);
  }

  return Xsheets;
}(_node.Node);

exports.Xsheets = Xsheets;
(0, _defineProperty2.default)(Xsheets, "name", "Xsheets");

var Xsheet = _decorate([(0, _node.props)('name', 'sheetId', 'r:id', 'state')], function (_initialize7, _Node16) {
  var Xsheet = /*#__PURE__*/function (_Node17) {
    (0, _inherits2.default)(Xsheet, _Node17);

    var _super10 = _createSuper(Xsheet);

    function Xsheet() {
      var _this7;

      (0, _classCallCheck2.default)(this, Xsheet);

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      _this7 = _super10.call.apply(_super10, [this].concat(args));

      _initialize7((0, _assertThisInitialized2.default)(_this7));

      return _this7;
    }

    return Xsheet;
  }(_Node16);

  return {
    F: Xsheet,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "Xsheet";
      }

    }]
  };
}, _node.Node);

exports.Xsheet = Xsheet;

var XcalcPr = _decorate([(0, _node.props)('calcId', 'iterateCount', 'refMode', 'iterate', 'iterateDelta')], function (_initialize8, _Node18) {
  var XcalcPr = /*#__PURE__*/function (_Node19) {
    (0, _inherits2.default)(XcalcPr, _Node19);

    var _super11 = _createSuper(XcalcPr);

    function XcalcPr() {
      var _this8;

      (0, _classCallCheck2.default)(this, XcalcPr);

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      _this8 = _super11.call.apply(_super11, [this].concat(args));

      _initialize8((0, _assertThisInitialized2.default)(_this8));

      return _this8;
    }

    return XcalcPr;
  }(_Node18);

  return {
    F: XcalcPr,
    d: [{
      kind: "field",
      static: true,
      key: "name",

      value() {
        return "XcalcPr";
      }

    }]
  };
}, _node.Node);

exports.XcalcPr = XcalcPr;

function makeWorkbookRels(sheetCount) {
  var rels = new XRelationships({});

  for (var i = 1; i <= sheetCount; i++) {
    rels.children.push(new XRelationship({
      Id: `rId${i}`,
      Target: `worksheets/sheet${i}.xml`,
      Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet'
    }));
  }

  rels.children.push(new XRelationship({
    Id: `rId${sheetCount + 1}`,
    Target: 'sharedStrings.xml',
    Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings'
  }));
  rels.children.push(new XRelationship({
    Id: `rId${sheetCount + 2}`,
    Target: 'theme/theme1.xml',
    Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme'
  }));
  rels.children.push(new XRelationship({
    Id: `rId${sheetCount + 3}`,
    Target: 'styles.xml',
    Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles'
  }));
  return rels;
}

function makeXworkbook() {
  var workbook = new Xworkbook();
  workbook.fileVersion = new XfileVersion({
    appName: 'JS XLSX'
  });
  workbook.workbookPr = new XworkbookPr({
    showObjects: 'all'
  });
  workbook.bookViews = new XbookViews({}, [new XworkbookView({
    showHorizontalScroll: true,
    showSheetTabs: true,
    showVerticalScroll: true,
    tabRatio: 204,
    windowHeight: 8192,
    windowWidth: 16384,
    xWindow: 0,
    yWindow: 0
  })]);
  workbook.calcPr = new XcalcPr({
    iterateCount: 100,
    iterate: false,
    iterateDelta: 0.001,
    refMode: 'A1'
  });
  return workbook;
}